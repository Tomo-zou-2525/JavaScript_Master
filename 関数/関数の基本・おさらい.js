/* オブジェクトの基本
オブジェクトの真偽値・参照する、という意味

オブジェクトで生成された値としては、メソッドなり各種値なりを1つ以上保持するが
それらが真偽値として判断されるとき、そのオブジェクトの持つ値を参照するのではなく
オブジェクトが参照されるアドレスが使われる。つまりアドレスに内包されている値を評価するのである

これは、例え値が同じであったとしても、参照先のアドレスが違うと  ＝＝＝  ではfalseになる

つまり、オブジェクトAをオブジェクトBに代入されるとき
オブジェクトAがBに変化するのではなく、新たなオブジェクトBが生成され、その参照先はオブジェクトAと同じである
ということになる

*/

/* constructorの扱い
全ての生成されたオブジェクトには、constructorプロパティがつく
console.logで(オブジェクト名.constructor)と入力することで、中身を見る事ができる

ちなみに、関数式でオブジェクトを定義した場合、変数名が定義されていない（無名関数）ではconstructorは使えないので注意
*/

/* instanceof
は、ラッパーオブジェクトでは反応しない(false)ので、オブジェクトの生成過程を経たもののみ反応する
 */

/* JavaScriptが動的である、という観点は
どのタイミングでも、プロパティやメソッドが追加できる、という点である
*/

/* delete演算子
プロパティ要素を消す唯一の演算子、ただし、該当のオブジェクトのみで、プロトタイプ先は削除されない
letやconst、functionで定義した関数には使えない
配列の要素も削除できるが、lengthは保持される（値はundefined）
*/
